services:

  api:
    build:
      dockerfile: "images/api.Dockerfile"
      context: "."
    image: "mcbench/api"
    ports:
      - "8000:8000"
    environment:
      CELERY_BROKER_URL: "redis://redis:6379/0"
      POSTGRES_HOST: "postgres"
      POSTGRES_PORT: "5432"
      POSTGRES_DB: "mc-bench"
      POSTGRES_USER: "mc-bench-admin"
      POSTGRES_PASSWORD: "mc-bench"
      POSTGRES_SSLMODE: "disable"
      REDIS_USE_AUTH: "false"
      REDIS_HOST: "redis"
      REDIS_USE_SSL: "false"
      CORS_ALLOWED_ORIGIN: "http://localhost,http://localhost:5173,http://127.0.0.1,http://127.0.0.1:5173"
      GITHUB_CLIENT_ID: ${GITHUB_CLIENT_ID}
      GITHUB_CLIENT_SECRET: ${GITHUB_CLIENT_SECRET}
      SECRET_KEY: ${SECRET_KEY}
      GITHUB_EMAIL_SALT: ${GITHUB_EMAIL_SALT}

  admin-api:
    build:
      dockerfile: "images/admin-api.Dockerfile"
      context: "."
    image: "mcbench/admin-api"
    ports:
      - "8001:8000"
    environment:
      CELERY_BROKER_URL: "redis://redis:6379/0"
      POSTGRES_HOST: "postgres"
      POSTGRES_PORT: "5432"
      POSTGRES_DB: "mc-bench"
      POSTGRES_USER: "mc-bench-admin"
      POSTGRES_PASSWORD: "mc-bench"
      POSTGRES_SSLMODE: "disable"
      REDIS_USE_AUTH: "false"
      REDIS_HOST: "redis"
      REDIS_USE_SSL: "false"
      CORS_ALLOWED_ORIGIN: "http://localhost,http://localhost:5173,http://127.0.0.1,http://127.0.0.1:5173"
      SECRET_KEY: ${SECRET_KEY}
      ANTHROPIC_API_KEY: ${ANTHROPIC_API_KEY}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      OPENROUTER_API_KEY: ${OPENROUTER_API_KEY}
  worker:
    build:
      dockerfile: "images/worker.Dockerfile"
      context: "."
    image: "mcbench/worker"
    environment:
      CELERY_BROKER_URL: "redis://redis:6379/0"
      REDIS_USE_SSL: "false"

  admin-worker:
    build:
      dockerfile: "images/admin-worker/admin-worker.Dockerfile"
      context: "."
    image: "mcbench/admin-worker"
    environment:
      CELERY_BROKER_URL: "redis://redis:6379/0"
      POSTGRES_HOST: "postgres"
      POSTGRES_PORT: "5432"
      POSTGRES_DB: "mc-bench"
      POSTGRES_USER: "mc-bench-admin"
      POSTGRES_PASSWORD: "mc-bench"
      POSTGRES_SSLMODE: "disable"
      REDIS_USE_SSL: "false"
      ANTHROPIC_API_KEY: ${ANTHROPIC_API_KEY}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      OPENROUTER_API_KEY: ${OPENROUTER_API_KEY}
      INTERNAL_OBJECT_BUCKET: "mcbench-backend-object-local"
      OBJECT_STORE_DSN: "object:9000"
      OBJECT_STORE_ACCESS_KEY: "fake_key"
      OBJECT_STORE_SECRET_KEY: "fake_secret"
      OBJECT_STORE_SECURE: "False"
      EXTERNAL_OBJECT_BUCKET: "mcbench-object-cdn-local"

  server-worker:
    build:
      dockerfile: "images/server-worker.Dockerfile"
      context: "."
    image: "mcbench/server-worker"
    environment:
      CELERY_BROKER_URL: "redis://redis:6379/0"
      POSTGRES_HOST: "postgres"
      POSTGRES_PORT: "5432"
      POSTGRES_DB: "mc-bench"
      POSTGRES_USER: "mc-bench-admin"
      POSTGRES_PASSWORD: "mc-bench"
      POSTGRES_SSLMODE: "disable"
      REDIS_USE_SSL: "false"
      INTERNAL_OBJECT_BUCKET: "mcbench-backend-object-local"
      OBJECT_STORE_DSN: "object:9000"
      OBJECT_STORE_ACCESS_KEY: "fake_key"
      OBJECT_STORE_SECRET_KEY: "fake_secret"
      OBJECT_STORE_SECURE: "False"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./data/server-worker/schematics:/data/schematics

  admin-flower:
    build:
      dockerfile: "images/admin-worker/admin-worker.Dockerfile"
      context: "."
    image: "mcbench/admin-worker"
    ports:
      - "5555:5555"
    environment:
      CELERY_BROKER_URL: "redis://redis:6379/0"

# Uncomment below to test flower github oauth
#      FLOWER_AUTH_PROVIDER: "flower.views.auth.GithubLoginHandler"
#      FLOWER_AUTH: "huntcsg@gmail.com"
#      FLOWER_OAUTH2_KEY: ${FLOWER_GITHUB_CLIENT_ID}
#      FLOWER_OAUTH2_SECRET: ${FLOWER_GITHUB_CLIENT_SECRET}
#      FLOWER_OAUTH2_REDIRECT_URI: "http://localhost:5555/login"

    command: ["celery", "-A", "mc_bench.apps.admin_worker", "flower"]

  postgres:
    image: postgres:16
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: "mc-bench"
      POSTGRES_USER: "mc-bench-admin"
      POSTGRES_PASSWORD: "mc-bench"

  redis:
    image: redis:7
    ports:
      - "6379:6379"

  object:
    image: minio/minio:latest
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio-data:/data
    environment:
      MINIO_ROOT_USER: fake_key
      MINIO_ROOT_PASSWORD: fake_secret
    command: ["server", "/data", "--console-address", "0.0.0.0:9001"]

volumes:
  minio-data:
