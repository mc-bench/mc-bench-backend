"""add_model_id_to_prompt_leaderboard

Revision ID: 36407e97cfac
Revises: 64cfe697cc9c
Create Date: 2025-03-06 18:15:59.414489

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "36407e97cfac"
down_revision: Union[str, None] = "64cfe697cc9c"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # First, truncate all leaderboard tables to start fresh
    op.execute(sa.text("TRUNCATE TABLE scoring.model_leaderboard CASCADE"))
    op.execute(sa.text("TRUNCATE TABLE scoring.prompt_leaderboard CASCADE"))
    op.execute(sa.text("TRUNCATE TABLE scoring.sample_leaderboard CASCADE"))
    op.execute(sa.text("TRUNCATE TABLE scoring.processed_comparison CASCADE"))

    # ### commands auto generated by Alembic - please adjust! ###
    # Add model_id column to prompt_leaderboard, required for showing prompt performance per model
    op.add_column(
        "prompt_leaderboard",
        sa.Column("model_id", sa.Integer(), nullable=False),
        schema="scoring",
    )
    op.drop_constraint(
        "unique_prompt_leaderboard_entry",
        "prompt_leaderboard",
        schema="scoring",
        type_="unique",
    )
    op.create_unique_constraint(
        "unique_prompt_leaderboard_entry",
        "prompt_leaderboard",
        ["prompt_id", "model_id", "metric_id", "test_set_id", "tag_id"],
        schema="scoring",
    )
    op.create_foreign_key(
        None,
        "prompt_leaderboard",
        "model",
        ["model_id"],
        ["id"],
        source_schema="scoring",
        referent_schema="specification",
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    raise RuntimeError("Upgrades only")
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, "prompt_leaderboard", schema="scoring", type_="foreignkey")
    op.drop_constraint(
        "unique_prompt_leaderboard_entry",
        "prompt_leaderboard",
        schema="scoring",
        type_="unique",
    )
    op.create_unique_constraint(
        "unique_prompt_leaderboard_entry",
        "prompt_leaderboard",
        ["prompt_id", "metric_id", "test_set_id", "tag_id"],
        schema="scoring",
    )
    op.drop_column("prompt_leaderboard", "model_id", schema="scoring")
    # ### end Alembic commands ###
