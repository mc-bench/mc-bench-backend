"""add_scheduler_control_table

Revision ID: 1eeb63dd99cc
Revises: 93bbc1a50a86
Create Date: 2025-03-10 17:46:35.931547

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "1eeb63dd99cc"
down_revision: Union[str, None] = "93bbc1a50a86"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "scheduler_control",
        sa.Column(
            "id",
            sa.UUID(),
            server_default=sa.text("uuid_generate_v4()"),
            nullable=False,
            comment="Primary key for the scheduler control value",
        ),
        sa.Column(
            "key",
            sa.String(),
            nullable=False,
            comment="The control key (e.g., MAX_QUEUED_TASKS, SCHEDULER_MODE)",
        ),
        sa.Column(
            "value",
            sa.String(),
            nullable=False,
            comment="JSON serialized value for the control setting",
        ),
        sa.Column(
            "description",
            sa.String(),
            nullable=True,
            comment="Description of what this control value does",
        ),
        sa.Column(
            "created", sa.TIMESTAMP(), server_default=sa.text("now()"), nullable=False
        ),
        sa.Column("last_modified", sa.TIMESTAMP(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("key"),
        schema="specification",
    )
    op.create_index(
        "idx_scheduler_control_key",
        "scheduler_control",
        ["key"],
        unique=False,
        schema="specification",
    )
    # ### end Alembic commands ###

    # Add default values
    op.execute(
        """
        INSERT INTO specification.scheduler_control (key, value, description)
        VALUES 
        ('SCHEDULER_MODE', '"off"', 'Scheduler mode (on|off). When off, the scheduler will not process any tasks.'),
        ('DEFAULT_MAX_QUEUED_TASKS', '0', 'Default maximum number of queued tasks per queue'),
        ('SCHEDULER_INTERVAL', '5', 'Sleep interval between scheduler runs in seconds'),
        ('HEARTBEAT_TIMEOUT_SECONDS', '180', 'Timeout for stalled tasks in seconds'),
        ('MAX_STALLED_TASKS_PER_CHECK', '10', 'Maximum number of stalled tasks to process per check'),
        ('MAX_FAILED_STAGES_PER_CHECK', '10', 'Maximum number of failed stages to process per check'),
        ('MAX_TASKS_prompt', '0', 'Maximum number of queued tasks for prompt queue'),
        ('MAX_TASKS_render', '0', 'Maximum number of queued tasks for render queue'),
        ('MAX_TASKS_server', '0', 'Maximum number of queued tasks for server queue'),
        ('MAX_TASKS_parse', '0', 'Maximum number of queued tasks for parse queue'),
        ('MAX_TASKS_validate', '0', 'Maximum number of queued tasks for validate queue'),
        ('MAX_TASKS_post_process', '0', 'Maximum number of queued tasks for post_process queue'),
        ('MAX_TASKS_prepare', '0', 'Maximum number of queued tasks for prepare queue')
        """
    )


def downgrade() -> None:
    raise RuntimeError("Upgrades only")
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(
        "idx_scheduler_control_key",
        table_name="scheduler_control",
        schema="specification",
    )
    op.drop_table("scheduler_control", schema="specification")
    # ### end Alembic commands ###
