"""Fix updated -> last_modified

Revision ID: 7242824efbe7
Revises: 7d62170745c6
Create Date: 2024-11-15 20:47:22.410383

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "7242824efbe7"
down_revision: Union[str, None] = "7d62170745c6"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "auth_provider",
        sa.Column("last_modified", sa.TIMESTAMP(), nullable=True),
        schema="auth",
    )
    op.add_column(
        "auth_provider",
        sa.Column("last_modified_by", sa.Integer(), nullable=True),
        schema="auth",
    )
    op.drop_constraint(
        "auth_provider_updated_by_fkey",
        "auth_provider",
        schema="auth",
        type_="foreignkey",
    )
    op.create_foreign_key(
        None,
        "auth_provider",
        "user",
        ["last_modified_by"],
        ["id"],
        source_schema="auth",
        referent_schema="auth",
    )
    op.drop_column("auth_provider", "updated_by", schema="auth")
    op.drop_column("auth_provider", "updated", schema="auth")
    op.add_column(
        "role", sa.Column("last_modified", sa.TIMESTAMP(), nullable=True), schema="auth"
    )
    op.add_column(
        "role",
        sa.Column("last_modified_by", sa.Integer(), nullable=True),
        schema="auth",
    )
    op.drop_constraint(
        "role_updated_by_fkey", "role", schema="auth", type_="foreignkey"
    )
    op.create_foreign_key(
        None,
        "role",
        "user",
        ["last_modified_by"],
        ["id"],
        source_schema="auth",
        referent_schema="auth",
    )
    op.drop_column("role", "updated_by", schema="auth")
    op.drop_column("role", "updated", schema="auth")
    op.add_column(
        "user", sa.Column("last_modified", sa.TIMESTAMP(), nullable=True), schema="auth"
    )
    op.add_column(
        "user",
        sa.Column("last_modified_by", sa.Integer(), nullable=True),
        schema="auth",
    )
    op.drop_constraint(
        "user_updated_by_fkey", "user", schema="auth", type_="foreignkey"
    )
    op.create_foreign_key(
        None,
        "user",
        "user",
        ["last_modified_by"],
        ["id"],
        source_schema="auth",
        referent_schema="auth",
    )
    op.drop_column("user", "updated_by", schema="auth")
    op.drop_column("user", "updated", schema="auth")
    op.create_table_comment("artifact", "", existing_comment=None, schema="sample")
    op.create_table_comment("artifact_kind", "", existing_comment=None, schema="sample")
    op.add_column(
        "sample",
        sa.Column("last_modified", sa.TIMESTAMP(), nullable=True),
        schema="sample",
    )
    op.add_column(
        "sample",
        sa.Column("last_modified_by", sa.Integer(), nullable=True),
        schema="sample",
    )
    op.drop_constraint(
        "sample_updated_by_fkey", "sample", schema="sample", type_="foreignkey"
    )
    op.create_foreign_key(
        None,
        "sample",
        "user",
        ["last_modified_by"],
        ["id"],
        source_schema="sample",
        referent_schema="auth",
    )
    op.create_table_comment("sample", "", existing_comment=None, schema="sample")
    op.drop_column("sample", "updated_by", schema="sample")
    op.drop_column("sample", "updated", schema="sample")
    op.add_column(
        "metric",
        sa.Column("last_modified", sa.TIMESTAMP(), nullable=True),
        schema="scoring",
    )
    op.add_column(
        "metric",
        sa.Column("last_modified_by", sa.Integer(), nullable=True),
        schema="scoring",
    )
    op.drop_constraint(
        "metric_updated_by_fkey", "metric", schema="scoring", type_="foreignkey"
    )
    op.create_foreign_key(
        None,
        "metric",
        "user",
        ["last_modified_by"],
        ["id"],
        source_schema="scoring",
        referent_schema="auth",
    )
    op.drop_column("metric", "updated_by", schema="scoring")
    op.drop_column("metric", "updated", schema="scoring")
    op.add_column(
        "model",
        sa.Column("last_modified", sa.TIMESTAMP(), nullable=True),
        schema="specification",
    )
    op.add_column(
        "model",
        sa.Column("last_modified_by", sa.Integer(), nullable=True),
        schema="specification",
    )
    op.drop_constraint(
        "model_updated_by_fkey", "model", schema="specification", type_="foreignkey"
    )
    op.create_foreign_key(
        None,
        "model",
        "user",
        ["last_modified_by"],
        ["id"],
        source_schema="specification",
        referent_schema="auth",
    )
    op.drop_column("model", "updated_by", schema="specification")
    op.drop_column("model", "updated", schema="specification")
    op.add_column(
        "prompt",
        sa.Column("last_modified", sa.TIMESTAMP(), nullable=True),
        schema="specification",
    )
    op.add_column(
        "prompt",
        sa.Column("last_modified_by", sa.Integer(), nullable=True),
        schema="specification",
    )
    op.drop_constraint(
        "prompt_updated_by_fkey", "prompt", schema="specification", type_="foreignkey"
    )
    op.create_foreign_key(
        None,
        "prompt",
        "user",
        ["last_modified_by"],
        ["id"],
        source_schema="specification",
        referent_schema="auth",
    )
    op.drop_column("prompt", "updated_by", schema="specification")
    op.drop_column("prompt", "updated", schema="specification")
    op.add_column(
        "run",
        sa.Column("last_modified", sa.TIMESTAMP(), nullable=True),
        schema="specification",
    )
    op.add_column(
        "run",
        sa.Column("last_modified_by", sa.Integer(), nullable=True),
        schema="specification",
    )
    op.drop_constraint(
        "run_updated_by_fkey", "run", schema="specification", type_="foreignkey"
    )
    op.create_foreign_key(
        None,
        "run",
        "user",
        ["last_modified_by"],
        ["id"],
        source_schema="specification",
        referent_schema="auth",
    )
    op.create_table_comment("run", "", existing_comment=None, schema="specification")
    op.drop_column("run", "updated_by", schema="specification")
    op.drop_column("run", "updated", schema="specification")
    op.add_column(
        "run_state",
        sa.Column("last_modified", sa.TIMESTAMP(), nullable=True),
        schema="specification",
    )
    op.add_column(
        "run_state",
        sa.Column("last_modified_by", sa.Integer(), nullable=True),
        schema="specification",
    )
    op.drop_constraint(
        "run_state_updated_by_fkey",
        "run_state",
        schema="specification",
        type_="foreignkey",
    )
    op.create_foreign_key(
        None,
        "run_state",
        "user",
        ["last_modified_by"],
        ["id"],
        source_schema="specification",
        referent_schema="auth",
    )
    op.create_table_comment(
        "run_state", "", existing_comment=None, schema="specification"
    )
    op.drop_column("run_state", "updated_by", schema="specification")
    op.drop_column("run_state", "updated", schema="specification")
    op.add_column(
        "template",
        sa.Column("last_modified", sa.TIMESTAMP(), nullable=True),
        schema="specification",
    )
    op.add_column(
        "template",
        sa.Column("last_modified_by", sa.Integer(), nullable=True),
        schema="specification",
    )
    op.drop_constraint(
        "template_updated_by_fkey",
        "template",
        schema="specification",
        type_="foreignkey",
    )
    op.create_foreign_key(
        None,
        "template",
        "user",
        ["last_modified_by"],
        ["id"],
        source_schema="specification",
        referent_schema="auth",
    )
    op.create_table_comment(
        "template", "", existing_comment=None, schema="specification"
    )
    op.drop_column("template", "updated_by", schema="specification")
    op.drop_column("template", "updated", schema="specification")
    # ### end Alembic commands ###


def downgrade() -> None:
    raise RuntimeError("Upgrades only")
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "template",
        sa.Column(
            "updated", postgresql.TIMESTAMP(), autoincrement=False, nullable=True
        ),
        schema="specification",
    )
    op.add_column(
        "template",
        sa.Column("updated_by", sa.INTEGER(), autoincrement=False, nullable=True),
        schema="specification",
    )
    op.drop_table_comment("template", existing_comment="", schema="specification")
    op.drop_constraint(None, "template", schema="specification", type_="foreignkey")
    op.create_foreign_key(
        "template_updated_by_fkey",
        "template",
        "user",
        ["updated_by"],
        ["id"],
        source_schema="specification",
        referent_schema="auth",
    )
    op.drop_column("template", "last_modified_by", schema="specification")
    op.drop_column("template", "last_modified", schema="specification")
    op.add_column(
        "run_state",
        sa.Column(
            "updated", postgresql.TIMESTAMP(), autoincrement=False, nullable=True
        ),
        schema="specification",
    )
    op.add_column(
        "run_state",
        sa.Column("updated_by", sa.INTEGER(), autoincrement=False, nullable=True),
        schema="specification",
    )
    op.drop_table_comment("run_state", existing_comment="", schema="specification")
    op.drop_constraint(None, "run_state", schema="specification", type_="foreignkey")
    op.create_foreign_key(
        "run_state_updated_by_fkey",
        "run_state",
        "user",
        ["updated_by"],
        ["id"],
        source_schema="specification",
        referent_schema="auth",
    )
    op.drop_column("run_state", "last_modified_by", schema="specification")
    op.drop_column("run_state", "last_modified", schema="specification")
    op.add_column(
        "run",
        sa.Column(
            "updated", postgresql.TIMESTAMP(), autoincrement=False, nullable=True
        ),
        schema="specification",
    )
    op.add_column(
        "run",
        sa.Column("updated_by", sa.INTEGER(), autoincrement=False, nullable=True),
        schema="specification",
    )
    op.drop_table_comment("run", existing_comment="", schema="specification")
    op.drop_constraint(None, "run", schema="specification", type_="foreignkey")
    op.create_foreign_key(
        "run_updated_by_fkey",
        "run",
        "user",
        ["updated_by"],
        ["id"],
        source_schema="specification",
        referent_schema="auth",
    )
    op.drop_column("run", "last_modified_by", schema="specification")
    op.drop_column("run", "last_modified", schema="specification")
    op.add_column(
        "prompt",
        sa.Column(
            "updated", postgresql.TIMESTAMP(), autoincrement=False, nullable=True
        ),
        schema="specification",
    )
    op.add_column(
        "prompt",
        sa.Column("updated_by", sa.INTEGER(), autoincrement=False, nullable=True),
        schema="specification",
    )
    op.drop_constraint(None, "prompt", schema="specification", type_="foreignkey")
    op.create_foreign_key(
        "prompt_updated_by_fkey",
        "prompt",
        "user",
        ["updated_by"],
        ["id"],
        source_schema="specification",
        referent_schema="auth",
    )
    op.drop_column("prompt", "last_modified_by", schema="specification")
    op.drop_column("prompt", "last_modified", schema="specification")
    op.add_column(
        "model",
        sa.Column(
            "updated", postgresql.TIMESTAMP(), autoincrement=False, nullable=True
        ),
        schema="specification",
    )
    op.add_column(
        "model",
        sa.Column("updated_by", sa.INTEGER(), autoincrement=False, nullable=True),
        schema="specification",
    )
    op.drop_constraint(None, "model", schema="specification", type_="foreignkey")
    op.create_foreign_key(
        "model_updated_by_fkey",
        "model",
        "user",
        ["updated_by"],
        ["id"],
        source_schema="specification",
        referent_schema="auth",
    )
    op.drop_column("model", "last_modified_by", schema="specification")
    op.drop_column("model", "last_modified", schema="specification")
    op.add_column(
        "metric",
        sa.Column(
            "updated", postgresql.TIMESTAMP(), autoincrement=False, nullable=True
        ),
        schema="scoring",
    )
    op.add_column(
        "metric",
        sa.Column("updated_by", sa.INTEGER(), autoincrement=False, nullable=True),
        schema="scoring",
    )
    op.drop_constraint(None, "metric", schema="scoring", type_="foreignkey")
    op.create_foreign_key(
        "metric_updated_by_fkey",
        "metric",
        "user",
        ["updated_by"],
        ["id"],
        source_schema="scoring",
        referent_schema="auth",
    )
    op.drop_column("metric", "last_modified_by", schema="scoring")
    op.drop_column("metric", "last_modified", schema="scoring")
    op.add_column(
        "sample",
        sa.Column(
            "updated", postgresql.TIMESTAMP(), autoincrement=False, nullable=True
        ),
        schema="sample",
    )
    op.add_column(
        "sample",
        sa.Column("updated_by", sa.INTEGER(), autoincrement=False, nullable=True),
        schema="sample",
    )
    op.drop_table_comment("sample", existing_comment="", schema="sample")
    op.drop_constraint(None, "sample", schema="sample", type_="foreignkey")
    op.create_foreign_key(
        "sample_updated_by_fkey",
        "sample",
        "user",
        ["updated_by"],
        ["id"],
        source_schema="sample",
        referent_schema="auth",
    )
    op.drop_column("sample", "last_modified_by", schema="sample")
    op.drop_column("sample", "last_modified", schema="sample")
    op.drop_table_comment("artifact_kind", existing_comment="", schema="sample")
    op.drop_table_comment("artifact", existing_comment="", schema="sample")
    op.add_column(
        "user",
        sa.Column(
            "updated", postgresql.TIMESTAMP(), autoincrement=False, nullable=True
        ),
        schema="auth",
    )
    op.add_column(
        "user",
        sa.Column("updated_by", sa.INTEGER(), autoincrement=False, nullable=True),
        schema="auth",
    )
    op.drop_constraint(None, "user", schema="auth", type_="foreignkey")
    op.create_foreign_key(
        "user_updated_by_fkey",
        "user",
        "user",
        ["updated_by"],
        ["id"],
        source_schema="auth",
        referent_schema="auth",
    )
    op.drop_column("user", "last_modified_by", schema="auth")
    op.drop_column("user", "last_modified", schema="auth")
    op.add_column(
        "role",
        sa.Column(
            "updated", postgresql.TIMESTAMP(), autoincrement=False, nullable=True
        ),
        schema="auth",
    )
    op.add_column(
        "role",
        sa.Column("updated_by", sa.INTEGER(), autoincrement=False, nullable=True),
        schema="auth",
    )
    op.drop_constraint(None, "role", schema="auth", type_="foreignkey")
    op.create_foreign_key(
        "role_updated_by_fkey",
        "role",
        "user",
        ["updated_by"],
        ["id"],
        source_schema="auth",
        referent_schema="auth",
    )
    op.drop_column("role", "last_modified_by", schema="auth")
    op.drop_column("role", "last_modified", schema="auth")
    op.add_column(
        "auth_provider",
        sa.Column(
            "updated", postgresql.TIMESTAMP(), autoincrement=False, nullable=True
        ),
        schema="auth",
    )
    op.add_column(
        "auth_provider",
        sa.Column("updated_by", sa.INTEGER(), autoincrement=False, nullable=True),
        schema="auth",
    )
    op.drop_constraint(None, "auth_provider", schema="auth", type_="foreignkey")
    op.create_foreign_key(
        "auth_provider_updated_by_fkey",
        "auth_provider",
        "user",
        ["updated_by"],
        ["id"],
        source_schema="auth",
        referent_schema="auth",
    )
    op.drop_column("auth_provider", "last_modified_by", schema="auth")
    op.drop_column("auth_provider", "last_modified", schema="auth")
    # ### end Alembic commands ###
