"""add_prompt_leaderboard_table

Revision ID: 938175add4e2
Revises: b118428bde0b
Create Date: 2025-03-06 04:16:29.656731

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "938175add4e2"
down_revision: Union[str, None] = "b118428bde0b"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "prompt_leaderboard",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column(
            "created", sa.TIMESTAMP(), server_default=sa.text("now()"), nullable=False
        ),
        sa.Column(
            "last_updated",
            sa.TIMESTAMP(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("prompt_id", sa.Integer(), nullable=False),
        sa.Column("metric_id", sa.Integer(), nullable=False),
        sa.Column("test_set_id", sa.Integer(), nullable=False),
        sa.Column("tag_id", sa.Integer(), nullable=True),
        sa.Column("elo_score", sa.Float(), nullable=False),
        sa.Column("vote_count", sa.Integer(), nullable=False),
        sa.Column("win_count", sa.Integer(), nullable=False),
        sa.Column("loss_count", sa.Integer(), nullable=False),
        sa.Column("tie_count", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["metric_id"],
            ["scoring.metric.id"],
        ),
        sa.ForeignKeyConstraint(
            ["prompt_id"],
            ["specification.prompt.id"],
        ),
        sa.ForeignKeyConstraint(
            ["tag_id"],
            ["specification.tag.id"],
        ),
        sa.ForeignKeyConstraint(
            ["test_set_id"],
            ["sample.test_set.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint(
            "prompt_id",
            "metric_id",
            "test_set_id",
            "tag_id",
            name="unique_prompt_leaderboard_entry",
        ),
        schema="scoring",
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    raise RuntimeError("Upgrades only")
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("prompt_leaderboard", schema="scoring")
    # ### end Alembic commands ###
