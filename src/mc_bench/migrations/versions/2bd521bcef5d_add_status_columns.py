"""Add status columns

Revision ID: 2bd521bcef5d
Revises: 1c4a87ae15fd
Create Date: 2024-11-21 13:35:58.875871

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "2bd521bcef5d"
down_revision: Union[str, None] = "1c4a87ae15fd"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "generation_state",
        sa.Column("id", sa.BigInteger(), autoincrement=True, nullable=False),
        sa.Column(
            "created", sa.TIMESTAMP(), server_default=sa.text("now()"), nullable=False
        ),
        sa.Column("created_by", sa.Integer(), nullable=False),
        sa.Column("last_modified", sa.TIMESTAMP(), nullable=True),
        sa.Column("last_modified_by", sa.Integer(), nullable=True),
        sa.Column(
            "external_id",
            sa.UUID(),
            server_default=sa.text("uuid_generate_v4()"),
            nullable=False,
        ),
        sa.Column("slug", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(
            ["created_by"],
            ["auth.user.id"],
        ),
        sa.ForeignKeyConstraint(
            ["last_modified_by"],
            ["auth.user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("slug"),
        schema="specification",
    )
    op.add_column(
        "generation",
        sa.Column("state_id", sa.BigInteger(), nullable=False),
        schema="specification",
    )
    op.create_foreign_key(
        None,
        "generation",
        "generation_state",
        ["state_id"],
        ["id"],
        source_schema="specification",
        referent_schema="specification",
    )
    op.execute(
        sa.text("""\
        INSERT INTO specification.generation_state (created_by, slug) VALUES (
                    (SELECT ID FROM auth."user" where username = 'SYSTEM'),
                    :slug
        )
    
    """).bindparams(slug="CREATED")
    )

    op.execute(
        sa.text("""\
        INSERT INTO specification.run_state (created_by, slug) VALUES (
                    (SELECT ID FROM auth."user" where username = 'SYSTEM'),
                    :slug
        )

    """).bindparams(slug="CREATED")
    )

    # ### end Alembic commands ###


def downgrade() -> None:
    raise RuntimeError("Upgrades only")
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table_comment("template", existing_comment="", schema="specification")
    op.drop_table_comment("run_state", existing_comment="", schema="specification")
    op.drop_constraint(None, "generation", schema="specification", type_="foreignkey")
    op.drop_column("generation", "state_id", schema="specification")
    op.drop_table_comment("sample", existing_comment="", schema="sample")
    op.drop_table_comment("artifact_kind", existing_comment="", schema="sample")
    op.drop_table_comment("artifact", existing_comment="", schema="sample")
    op.drop_table("generation_state", schema="specification")
    # ### end Alembic commands ###
