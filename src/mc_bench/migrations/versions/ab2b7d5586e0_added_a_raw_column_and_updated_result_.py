"""added a raw column and updated result_code_text to be nullable for sample.sample

Revision ID: ab2b7d5586e0
Revises: a4bee97b3630
Create Date: 2024-11-23 22:36:44.338890

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "ab2b7d5586e0"
down_revision: Union[str, None] = "a4bee97b3630"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table_comment("artifact", "", existing_comment=None, schema="sample")
    op.create_table_comment("artifact_kind", "", existing_comment=None, schema="sample")
    op.add_column(
        "sample", sa.Column("raw", sa.String(), nullable=True), schema="sample"
    )
    op.alter_column(
        "sample",
        "result_code_text",
        existing_type=sa.VARCHAR(),
        nullable=True,
        schema="sample",
    )
    op.create_table_comment("sample", "", existing_comment=None, schema="sample")
    op.create_table_comment(
        "run_state", "", existing_comment=None, schema="specification"
    )
    op.create_table_comment(
        "template", "", existing_comment=None, schema="specification"
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    raise RuntimeError("Upgrades only")
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table_comment("template", existing_comment="", schema="specification")
    op.drop_table_comment("run_state", existing_comment="", schema="specification")
    op.drop_table_comment("sample", existing_comment="", schema="sample")
    op.alter_column(
        "sample",
        "result_code_text",
        existing_type=sa.VARCHAR(),
        nullable=False,
        schema="sample",
    )
    op.drop_column("sample", "raw", schema="sample")
    op.drop_table_comment("artifact_kind", existing_comment="", schema="sample")
    op.drop_table_comment("artifact", existing_comment="", schema="sample")
    # ### end Alembic commands ###
