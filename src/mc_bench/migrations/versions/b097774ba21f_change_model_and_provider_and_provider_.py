"""change model and provider and provider_class tables

Revision ID: b097774ba21f
Revises: 1f5438c5d056
Create Date: 2024-11-19 22:13:33.936341

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "b097774ba21f"
down_revision: Union[str, None] = "1f5438c5d056"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "provider_class",
        sa.Column("id", sa.BigInteger(), autoincrement=True, nullable=False),
        sa.Column(
            "created", sa.TIMESTAMP(), server_default=sa.text("now()"), nullable=False
        ),
        sa.Column("created_by", sa.Integer(), nullable=False),
        sa.Column("last_modified", sa.TIMESTAMP(), nullable=True),
        sa.Column("last_modified_by", sa.Integer(), nullable=True),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column(
            "default_config",
            sa.JSON(),
            server_default=sa.text("'{}'::jsonb"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["created_by"],
            ["auth.user.id"],
        ),
        sa.ForeignKeyConstraint(
            ["last_modified_by"],
            ["auth.user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
        schema="specification",
    )
    op.create_table(
        "provider",
        sa.Column("id", sa.BigInteger(), autoincrement=True, nullable=False),
        sa.Column(
            "created", sa.TIMESTAMP(), server_default=sa.text("now()"), nullable=False
        ),
        sa.Column("created_by", sa.Integer(), nullable=False),
        sa.Column("last_modified", sa.TIMESTAMP(), nullable=True),
        sa.Column("last_modified_by", sa.Integer(), nullable=True),
        sa.Column(
            "external_id",
            sa.UUID(),
            server_default=sa.text("uuid_generate_v4()"),
            nullable=False,
        ),
        sa.Column("model_id", sa.BigInteger(), nullable=False),
        sa.Column("provider_class", sa.String(), nullable=False),
        sa.Column("config", sa.JSON(), nullable=False),
        sa.ForeignKeyConstraint(
            ["created_by"],
            ["auth.user.id"],
        ),
        sa.ForeignKeyConstraint(
            ["last_modified_by"],
            ["auth.user.id"],
        ),
        sa.ForeignKeyConstraint(
            ["model_id"],
            ["specification.model.id"],
        ),
        sa.ForeignKeyConstraint(
            ["provider_class"],
            ["specification.provider_class.name"],
        ),
        sa.PrimaryKeyConstraint("id"),
        schema="specification",
    )
    op.add_column(
        "model", sa.Column("slug", sa.String(), nullable=False), schema="specification"
    )
    op.drop_constraint(
        "model_name_key", "model", schema="specification", type_="unique"
    )
    op.create_unique_constraint(None, "model", ["slug"], schema="specification")
    op.drop_column("model", "name", schema="specification")
    # ### end Alembic commands ###


def downgrade() -> None:
    raise RuntimeError("Upgrades only")
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "model",
        sa.Column("name", sa.VARCHAR(), autoincrement=False, nullable=False),
        schema="specification",
    )
    op.drop_constraint(None, "model", schema="specification", type_="unique")
    op.create_unique_constraint(
        "model_name_key", "model", ["name"], schema="specification"
    )
    op.drop_column("model", "slug", schema="specification")
    op.drop_table("provider", schema="specification")
    op.drop_table("provider_class", schema="specification")
    # ### end Alembic commands ###
